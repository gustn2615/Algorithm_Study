
// 김지민은 N명이 참가하는 스타 토너먼트에 진출했다. 
// N명의 참가자는 번호가 1번부터 N번까지 배정받는다. 그러고 난 후에 서로 인접한 번호끼리 스타를 한다.
// 이긴 사람은 다음 라운드에 진출하고, 진 사람은 그 라운드에서 떨어진다.
// 만약 그 라운드의 참가자가 홀수명이라면, 마지막 번호를 가진 참가자는 다음 라운드로 자동 진출한다.
// 다음 라운드에선 다시 참가자의 번호를 1번부터 매긴다. 이때, 번호를 매기는 순서는 처음 번호의 순서를 유지하면서 1번부터 매긴다.
// 번호를 다시 배정받은 후에 한 명만 남을 때까지 라운드를 계속 한다.
// 마침 이 스타 대회에 임한수도 참가했다. 김지민은 갑자기 스타 대회에서 우승하는 욕심은 없어지고, 몇 라운드에서 임한수와 대결하는지 궁금해졌다.
// 일단 김지민과 임한수는 서로 대결하기 전까지 항상 이긴다고 가정한다.
// 1 라운드에서 김지민의 번호와 임한수의 번호가 주어질 때, 과연 김지민과 임한수가 몇 라운드에서 대결하는지 출력하는 프로그램을 작성하시오.

package Baekjun;

// 선수의 번호를 입력 받자.
// 반복문을 통해 라운드를 진행하면서 선수들이 경기를 이겼다고 가정하고 각 선수의 번호를 재배정하자. 
// 두 선수의 번호를 활용해 반복문의 종료조건을 설정하고 반복문이 종료됐을 때 최종 라운드 값을 출력한다.

import java.util.Scanner;

public class P1057 {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		
		int N = sc.nextInt(); // 전체 참가자 수 N
		int kim = sc.nextInt(); // 김지민 번호
		int lim = sc.nextInt(); // 임한수 번호
		int round = 1; // 라운드 번호(시작 라운드가 1라운드이기 때문에, 최초 값을 1로 초기화한다.)
		for(;;round++) { // 반복문을 사용. 반복문을 돌 때 마다, round를 1 씩 증가시킨다.
			if(Math.abs(kim - lim) == 1 && Math.abs((kim/2) - (lim/2)) == 1) {
				// 두 선수가 붙게되는 경우는, 두 선수의 번호 차가 1이고, 동시에 두 선수의 번호를 2로 나눈 수의 차가 1이어야 한다.
				break; // break를 통해 반복문을 빠져나온다.
			}
			kim = ((kim+1)>>1); // 비트연산의 쉬프트 연산을 활용해, 각 선수가 다음 라운드에서 배정받을 번호를 설정해 준다.
			lim = ((lim+1)>>1);
		}
		System.out.println(round); // 반복문을 빠져나왔을 때, 라운드 값을 출력하도록 한다.
	}
}
